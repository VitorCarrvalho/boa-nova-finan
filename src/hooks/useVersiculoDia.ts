
import { useQuery } from '@tanstack/react-query';

interface Versiculo {
  text: string;
  reference: string;
}

// Lista expandida de vers√≠culos em portugu√™s (NVI) para uso local
const versiculosNVI: Versiculo[] = [
  {
    text: "Porque eu bem sei os pensamentos que tenho a vosso respeito, diz o Senhor; pensamentos de paz e n√£o de mal, para vos dar o fim que esperais.",
    reference: "Jeremias 29:11"
  },
  {
    text: "Tudo posso naquele que me fortalece.",
    reference: "Filipenses 4:13"
  },
  {
    text: "O Senhor √© o meu pastor; nada me faltar√°.",
    reference: "Salmos 23:1"
  },
  {
    text: "Entrega o teu caminho ao Senhor; confia nele, e ele o far√°.",
    reference: "Salmos 37:5"
  },
  {
    text: "Porque Deus tanto amou o mundo que deu o seu Filho unig√™nito, para que todo o que nele crer n√£o pere√ßa, mas tenha a vida eterna.",
    reference: "Jo√£o 3:16"
  },
  {
    text: "N√£o se turbe o vosso cora√ß√£o; credes em Deus, crede tamb√©m em mim.",
    reference: "Jo√£o 14:1"
  },
  {
    text: "Sabemos que todas as coisas cooperam para o bem daqueles que amam a Deus, daqueles que s√£o chamados segundo o seu prop√≥sito.",
    reference: "Romanos 8:28"
  },
  {
    text: "O Senhor √© a minha luz e a minha salva√ß√£o; de quem terei medo? O Senhor √© o meu forte ref√∫gio; de quem terei temor?",
    reference: "Salmos 27:1"
  },
  {
    text: "Venham a mim, todos os que est√£o cansados e sobrecarregados, e eu lhes darei descanso.",
    reference: "Mateus 11:28"
  },
  {
    text: "N√£o andem ansiosos por coisa alguma, mas em tudo, pela ora√ß√£o e s√∫plicas, e com a√ß√£o de gra√ßas, apresentem seus pedidos a Deus.",
    reference: "Filipenses 4:6"
  },
  {
    text: "A paz deixo com voc√™s; a minha paz lhes dou. N√£o a dou como o mundo a d√°. N√£o se perturbe o cora√ß√£o de voc√™s, nem tenham medo.",
    reference: "Jo√£o 14:27"
  },
  {
    text: "Se confessarmos os nossos pecados, ele √© fiel e justo para perdoar os nossos pecados e nos purificar de toda injusti√ßa.",
    reference: "1 Jo√£o 1:9"
  },
  {
    text: "Sejam fortes e corajosos! N√£o tenham medo nem desanimem, pois o Senhor, o seu Deus, estar√° com voc√™s por onde forem.",
    reference: "Josu√© 1:9"
  },
  {
    text: "O amor √© paciente, o amor √© bondoso. N√£o inveja, n√£o se vangloria, n√£o se orgulha.",
    reference: "1 Cor√≠ntios 13:4"
  },
  {
    text: "Confie no Senhor de todo o cora√ß√£o e n√£o se apoie em seu pr√≥prio entendimento.",
    reference: "Prov√©rbios 3:5"
  },
  {
    text: "Pois eu sou o Senhor, o seu Deus, que segura a sua m√£o direita e lhe diz: N√£o tema; eu o ajudarei.",
    reference: "Isa√≠as 41:13"
  },
  {
    text: "Alegrem-se sempre no Senhor. Novamente digo: alegrem-se!",
    reference: "Filipenses 4:4"
  },
  {
    text: "Lancem sobre ele toda a sua ansiedade, porque ele tem cuidado de voc√™s.",
    reference: "1 Pedro 5:7"
  },
  {
    text: "O Senhor lutar√° por voc√™s; voc√™s s√≥ precisam ficar quietos.",
    reference: "√äxodo 14:14"
  },
  {
    text: "Mas os que esperam no Senhor renovam as suas for√ßas. Voam alto como √°guias; correm e n√£o ficam exaustos, andam e n√£o se cansam.",
    reference: "Isa√≠as 40:31"
  },
  {
    text: "O cora√ß√£o do homem pode fazer planos, mas a resposta certa dos l√°bios vem do Senhor.",
    reference: "Prov√©rbios 16:1"
  },
  {
    text: "Por isso n√£o tema, pois estou com voc√™; n√£o tenha medo, pois sou o seu Deus. Eu o fortalecerei e o ajudarei; eu o segurarei com a minha m√£o direita vitoriosa.",
    reference: "Isa√≠as 41:10"
  },
  {
    text: "Busquem, pois, em primeiro lugar o Reino de Deus e a sua justi√ßa, e todas essas coisas lhes ser√£o acrescentadas.",
    reference: "Mateus 6:33"
  },
  {
    text: "Tenham miseric√≥rdia de mim, √≥ Deus, segundo a tua benignidade; apaga as minhas transgress√µes, segundo a multid√£o das tuas miseric√≥rdias.",
    reference: "Salmos 51:1"
  },
  {
    text: "Porque pela gra√ßa sois salvos, por meio da f√©; e isto n√£o vem de v√≥s, √© dom de Deus.",
    reference: "Ef√©sios 2:8"
  },
  {
    text: "O Senhor aben√ßoe voc√™ e o guarde; o Senhor fa√ßa resplandecer o seu rosto sobre voc√™ e tenha miseric√≥rdia de voc√™.",
    reference: "N√∫meros 6:24-25"
  },
  {
    text: "Clame a mim e eu lhe responderei e lhe direi coisas grandiosas e insond√°veis que voc√™ n√£o conhece.",
    reference: "Jeremias 33:3"
  },
  {
    text: "Humilhem-se, pois, debaixo da poderosa m√£o de Deus, para que ele os exalte no tempo devido.",
    reference: "1 Pedro 5:6"
  },
  {
    text: "Aquele que habita no abrigo do Alt√≠ssimo e descansa √† sombra do Todo-poderoso.",
    reference: "Salmos 91:1"
  },
  {
    text: "Jesus respondeu: 'Eu sou o caminho, a verdade e a vida. Ningu√©m vem ao Pai, a n√£o ser por mim.'",
    reference: "Jo√£o 14:6"
  }
];

// Fun√ß√£o para verificar se o texto est√° em portugu√™s
const isPortuguese = (text: string): boolean => {
  const portugueseWords = ['que', 'para', 'com', 'n√£o', 'seu', 'sua', 'ele', 'ela', 'deus', 'senhor', 'voc√™', 'voc√™s', 'mim', 'nos'];
  const textLower = text.toLowerCase();
  return portugueseWords.some(word => textLower.includes(word));
};

const getVersiculoFromAPI = async (): Promise<Versiculo> => {
  console.log('üîç Tentando buscar vers√≠culo da API brasileira...');
  
  try {
    // Tentar API brasileira (portugu√™s)
    const response = await fetch('https://www.abibliadigital.com.br/api/verses/nvi/random');
    
    if (response.ok) {
      const data = await response.json();
      console.log('üì° Resposta da API:', data);
      
      if (data && data.text && data.reference) {
        const versiculo = {
          text: data.text.trim(),
          reference: data.reference
        };
        
        // Verificar se o texto est√° em portugu√™s
        if (isPortuguese(versiculo.text)) {
          console.log('‚úÖ Vers√≠culo da API em portugu√™s:', versiculo.reference);
          return versiculo;
        } else {
          console.log('‚ùå Vers√≠culo da API n√£o est√° em portugu√™s, usando fallback local');
        }
      }
    }
  } catch (error) {
    console.log('‚ùå Erro na API brasileira:', error);
  }

  // Fallback para vers√≠culo local aleat√≥rio
  console.log('üè† Usando vers√≠culo aleat√≥rio do cache local...');
  const randomIndex = Math.floor(Math.random() * versiculosNVI.length);
  const versiculoLocal = versiculosNVI[randomIndex];
  console.log('üìñ Vers√≠culo local selecionado:', versiculoLocal.reference);
  return versiculoLocal;
};

const getVersiculoFromCache = (): Versiculo | null => {
  try {
    const cached = localStorage.getItem('versiculo_dia');
    const today = new Date().toDateString();
    
    if (cached) {
      const { data, date } = JSON.parse(cached);
      
      // Verificar se √© do dia atual E se est√° em portugu√™s
      if (date === today && data && isPortuguese(data.text)) {
        console.log('üíæ Vers√≠culo encontrado no cache (portugu√™s):', data.reference);
        return data;
      } else if (date === today && data && !isPortuguese(data.text)) {
        console.log('üóëÔ∏è Removendo vers√≠culo em ingl√™s do cache...');
        localStorage.removeItem('versiculo_dia');
      }
    }
  } catch (error) {
    console.error('‚ùå Erro ao ler cache do vers√≠culo:', error);
    localStorage.removeItem('versiculo_dia');
  }
  return null;
};

const saveVersiculoToCache = (versiculo: Versiculo): void => {
  try {
    // S√≥ salvar no cache se estiver em portugu√™s
    if (isPortuguese(versiculo.text)) {
      const today = new Date().toDateString();
      localStorage.setItem('versiculo_dia', JSON.stringify({
        data: versiculo,
        date: today
      }));
      console.log('üíæ Vers√≠culo salvo no cache:', versiculo.reference);
    } else {
      console.log('‚ö†Ô∏è N√£o salvando vers√≠culo em ingl√™s no cache');
    }
  } catch (error) {
    console.error('‚ùå Erro ao salvar vers√≠culo no cache:', error);
  }
};

// Fun√ß√£o para for√ßar um novo vers√≠culo (usado pelo bot√£o refresh)
const forceNewVerse = async (): Promise<Versiculo> => {
  console.log('üîÑ For√ßando busca de novo vers√≠culo...');
  
  // Limpar cache existente
  localStorage.removeItem('versiculo_dia');
  
  // Buscar novo vers√≠culo
  const versiculo = await getVersiculoFromAPI();
  
  // Salvar no cache
  saveVersiculoToCache(versiculo);
  
  return versiculo;
};

export const useVersiculoDia = () => {
  return useQuery({
    queryKey: ['versiculo-dia'],
    queryFn: async (): Promise<Versiculo> => {
      console.log('üöÄ Iniciando busca por vers√≠culo do dia...');
      
      // Primeiro, tentar buscar do cache
      const cached = getVersiculoFromCache();
      if (cached) {
        return cached;
      }

      // Se n√£o tem no cache, buscar da API
      const versiculo = await getVersiculoFromAPI();
      
      // Salvar no cache apenas se estiver em portugu√™s
      saveVersiculoToCache(versiculo);
      
      return versiculo;
    },
    staleTime: 24 * 60 * 60 * 1000, // 24 horas
    gcTime: 24 * 60 * 60 * 1000, // 24 horas
  });
};

// Hook personalizado para for√ßar refresh
export const useRefreshVerse = () => {
  return {
    forceRefresh: forceNewVerse
  };
};
